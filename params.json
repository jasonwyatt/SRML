{
  "name": "SRML",
  "tagline": "Style your localized strings for Android.",
  "body": "### SRML stands for **S**tring **R**esource **M**arkup **L**anguage\r\n\r\nKeeping your text in `<string>` resources is important when it comes time to internationalize your app (or just keep the code clean).\r\n\r\n### SRML Tags\r\n\r\n* `{{b}}Text{{/b}}` -> **Text**\r\n* `{{i}}Text{{/i}}` -> *Text*\r\n* `{{u}}Text{{/u}}` -> underlined text (markdown fail!)\r\n* `{{strike}}Text{{/strike}}` -> ~~Text~~\r\n* `{{color fg=#FF0000}}Text{{/color}}` -> red \"Text\"\r\n* `{{color bg=#FF0000}}Text{{/color}}` -> red background \"Text\"\r\n* `{{color fg=#fff bg=#000}}Text{{/color}}` -> white \"Text\" on black background\r\n* `{{link url=http://myurl.com}}Text{{/link}}` -> [Test](http://myurl.com)\r\n* `{{code}}Text{{/code}}` -> monospaced text\r\n* `{{intent class=com.yourcompany.ActivityClass}}Text{{/intent}}` -> link \"Text\" which launches the `ActivityClass` activity\r\n* `{{intent class=com.yourcompany.ActivityClass x_myextra=foo}}Text{{/intent}}` -> link \"Text\" which launches the `ActivityClass` activity with intent extra `myextra=\"foo\"`\r\n* ``{{intent class=com.yourcompany.ActivityClass x_myextra=`value with spaces`}}Text{{/intent}}`` -> link \"Text\" which launches the `ActivityClass` activity with intent extra `myextra=\"value with spaces\"`\r\n* `{{intent class=com.yourcompany.ServiceClass for_service=true}}Text{{/intent}}` -> link \"Text\" which starts the `ServiceClass` service\r\n\r\n#### Create your own tags\r\n\r\n1. Extend [Tag](library/src/main/java/co/jasonwyatt/srml/tags/Tag.java) or [ParameterizedTag](library/src/main/java/co/jasonwyatt/srml/tags/ParameterizedTag)\r\n1. Register your tag with `SRML.registerTag(\"mytag\", MyTag.class)`\r\n1. Use it in a string resource: `<string name=\"some_string\">Hello {{mytag}}World{{/mytag}}</string>`\r\n\r\n### Setup \r\n\r\nAdd [jitpack.io](https://jitpack.io) to your root `build.gradle` at the end of `repositories`:\r\n\r\n```groovy\r\nallprojects {\r\n    repositories {\r\n        ...\r\n        maven { url \"https://jitpack.io\" }\r\n    }\r\n}\r\n```\r\n\r\nAdd SRML as a dependency to your app's `build.gradle`:\r\n\r\n```groovy\r\ndependencies {\r\n    compile 'com.github.jasonwyatt:SRML:-SNAPSHOT'\r\n}\r\n```\r\n\r\n### How to use\r\n\r\n```java\r\n// simple case\r\nSRML.getString(context, R.string.mystring);\r\n\r\n// parameterized strings\r\nSRML.getString(context, R.string.my_parameterized_string, firstArg, secondArg, ...);\r\n\r\n// quantity strings\r\nSRML.getQuantityString(context, R.plurals.my_plurals_resource, quantity, ...format args...);\r\n\r\n// String array resources\r\nSRML.getStringArray(context, R.array.my_string_array);\r\n```\r\n\r\nYour resources can be arbitrarily complex, involving multiple, nested tags.\r\n\r\n### License\r\n\r\n```\r\n   Copyright 2016 Jason Feinstein\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}